name: PR Builder

on:
  pull_request:
    types: [opened, synchronize, labeled]
    branches: [master]
    paths-ignore:
      - "**.md"
      - "LICENSE"

concurrency:
  group: pr-builder-${{ github.ref }}
  cancel-in-progress: true

env:
  GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

jobs:
  build:
    name: 🚧 PR Build
    if: ${{ github.event_name == 'pull_request' || github.event.label.name == 'trigger-pr-builder' }}
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [lts/*]
        pnpm-version: [8.7.4]
        maven-version: [3.8.6]
        java-version: [11]
    steps:
      - name: ⬇️ Checkout
        id: checkout
        uses: actions/checkout@v2.3.3
        with:
          # We need to fetch all branches and commits so that Nx affected has a base to compare against.
          fetch-depth: 0

      - name: 🟢 Setup node
        id: setup-node
        uses: actions/setup-node@v2
        with:
          node-version: ${{ matrix.node-version }}

      - name: 🐳 Set SHAs for Nx
        id: set-shas
        uses: nrwl/nx-set-shas@v3
        with:
          main-branch-name: "master"

      - name: 🥡 Setup pnpm
        id: setup-pnpm
        uses: pnpm/action-setup@v2.1.0
        with:
          version: ${{ matrix.pnpm-version }}
          run_install: false

      - name: 🎈 Get pnpm store directory
        id: get-pnpm-cache-dir
        run: |
          echo "::set-output name=pnpm_cache_dir::$(pnpm store path)"

      - name: 🔆 Cache pnpm modules
        uses: actions/cache@v3
        id: pnpm-cache
        with:
          path: ${{ steps.get-pnpm-cache-dir.outputs.pnpm_cache_dir }}
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-

      - name: 🧩 Install Dependencies
        id: install-dependencies
        run: pnpm install

      - name: 🦄 Lint Changed Files
        id: lint-changed-with-eslint
        working-directory: .github/workflows
        run: |
            bash ./scripts/lint-changed.sh ${{ github.event.pull_request.number }}

      # Temporarily disable linting all files as it is failing intermittently.
      # - name: ⏳ Lint All Files
      #   run: pnpm nx affected --base=${{ env.NX_BASE }} --head=${{ env.NX_HEAD }} --plain --target=lint --parallel=3

      - name: 👷 Build Re-usable Modules
        id: build-reusable-modules
        run: pnpm build:modules

      - name: ☄️ Check Type Errors
        run: pnpm nx affected --base=${{ env.NX_BASE }} --head=${{ env.NX_HEAD }} --target=typecheck --parallel=3
